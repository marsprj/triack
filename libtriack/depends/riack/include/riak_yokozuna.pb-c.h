/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: riak_yokozuna.proto */

#ifndef PROTOBUF_C_riak_5fyokozuna_2eproto__INCLUDED
#define PROTOBUF_C_riak_5fyokozuna_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1000002 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _RpbYokozunaIndex RpbYokozunaIndex;
typedef struct _RpbYokozunaIndexGetReq RpbYokozunaIndexGetReq;
typedef struct _RpbYokozunaIndexGetResp RpbYokozunaIndexGetResp;
typedef struct _RpbYokozunaIndexPutReq RpbYokozunaIndexPutReq;
typedef struct _RpbYokozunaIndexDeleteReq RpbYokozunaIndexDeleteReq;
typedef struct _RpbYokozunaSchema RpbYokozunaSchema;
typedef struct _RpbYokozunaSchemaPutReq RpbYokozunaSchemaPutReq;
typedef struct _RpbYokozunaSchemaGetReq RpbYokozunaSchemaGetReq;
typedef struct _RpbYokozunaSchemaGetResp RpbYokozunaSchemaGetResp;


/* --- enums --- */


/* --- messages --- */

struct  _RpbYokozunaIndex
{
  ProtobufCMessage base;
  ProtobufCBinaryData name;
  protobuf_c_boolean has_schema;
  ProtobufCBinaryData schema;
  protobuf_c_boolean has_n_val;
  uint32_t n_val;
};
#define RPB_YOKOZUNA_INDEX__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpb_yokozuna_index__descriptor) \
    , {0,NULL}, 0,{0,NULL}, 0,0 }


struct  _RpbYokozunaIndexGetReq
{
  ProtobufCMessage base;
  protobuf_c_boolean has_name;
  ProtobufCBinaryData name;
};
#define RPB_YOKOZUNA_INDEX_GET_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpb_yokozuna_index_get_req__descriptor) \
    , 0,{0,NULL} }


struct  _RpbYokozunaIndexGetResp
{
  ProtobufCMessage base;
  size_t n_index;
  RpbYokozunaIndex **index;
};
#define RPB_YOKOZUNA_INDEX_GET_RESP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpb_yokozuna_index_get_resp__descriptor) \
    , 0,NULL }


struct  _RpbYokozunaIndexPutReq
{
  ProtobufCMessage base;
  RpbYokozunaIndex *index;
};
#define RPB_YOKOZUNA_INDEX_PUT_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpb_yokozuna_index_put_req__descriptor) \
    , NULL }


struct  _RpbYokozunaIndexDeleteReq
{
  ProtobufCMessage base;
  ProtobufCBinaryData name;
};
#define RPB_YOKOZUNA_INDEX_DELETE_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpb_yokozuna_index_delete_req__descriptor) \
    , {0,NULL} }


struct  _RpbYokozunaSchema
{
  ProtobufCMessage base;
  ProtobufCBinaryData name;
  protobuf_c_boolean has_content;
  ProtobufCBinaryData content;
};
#define RPB_YOKOZUNA_SCHEMA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpb_yokozuna_schema__descriptor) \
    , {0,NULL}, 0,{0,NULL} }


struct  _RpbYokozunaSchemaPutReq
{
  ProtobufCMessage base;
  RpbYokozunaSchema *schema;
};
#define RPB_YOKOZUNA_SCHEMA_PUT_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpb_yokozuna_schema_put_req__descriptor) \
    , NULL }


struct  _RpbYokozunaSchemaGetReq
{
  ProtobufCMessage base;
  ProtobufCBinaryData name;
};
#define RPB_YOKOZUNA_SCHEMA_GET_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpb_yokozuna_schema_get_req__descriptor) \
    , {0,NULL} }


struct  _RpbYokozunaSchemaGetResp
{
  ProtobufCMessage base;
  RpbYokozunaSchema *schema;
};
#define RPB_YOKOZUNA_SCHEMA_GET_RESP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rpb_yokozuna_schema_get_resp__descriptor) \
    , NULL }


/* RpbYokozunaIndex methods */
void   rpb_yokozuna_index__init
                     (RpbYokozunaIndex         *message);
size_t rpb_yokozuna_index__get_packed_size
                     (const RpbYokozunaIndex   *message);
size_t rpb_yokozuna_index__pack
                     (const RpbYokozunaIndex   *message,
                      uint8_t             *out);
size_t rpb_yokozuna_index__pack_to_buffer
                     (const RpbYokozunaIndex   *message,
                      ProtobufCBuffer     *buffer);
RpbYokozunaIndex *
       rpb_yokozuna_index__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpb_yokozuna_index__free_unpacked
                     (RpbYokozunaIndex *message,
                      ProtobufCAllocator *allocator);
/* RpbYokozunaIndexGetReq methods */
void   rpb_yokozuna_index_get_req__init
                     (RpbYokozunaIndexGetReq         *message);
size_t rpb_yokozuna_index_get_req__get_packed_size
                     (const RpbYokozunaIndexGetReq   *message);
size_t rpb_yokozuna_index_get_req__pack
                     (const RpbYokozunaIndexGetReq   *message,
                      uint8_t             *out);
size_t rpb_yokozuna_index_get_req__pack_to_buffer
                     (const RpbYokozunaIndexGetReq   *message,
                      ProtobufCBuffer     *buffer);
RpbYokozunaIndexGetReq *
       rpb_yokozuna_index_get_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpb_yokozuna_index_get_req__free_unpacked
                     (RpbYokozunaIndexGetReq *message,
                      ProtobufCAllocator *allocator);
/* RpbYokozunaIndexGetResp methods */
void   rpb_yokozuna_index_get_resp__init
                     (RpbYokozunaIndexGetResp         *message);
size_t rpb_yokozuna_index_get_resp__get_packed_size
                     (const RpbYokozunaIndexGetResp   *message);
size_t rpb_yokozuna_index_get_resp__pack
                     (const RpbYokozunaIndexGetResp   *message,
                      uint8_t             *out);
size_t rpb_yokozuna_index_get_resp__pack_to_buffer
                     (const RpbYokozunaIndexGetResp   *message,
                      ProtobufCBuffer     *buffer);
RpbYokozunaIndexGetResp *
       rpb_yokozuna_index_get_resp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpb_yokozuna_index_get_resp__free_unpacked
                     (RpbYokozunaIndexGetResp *message,
                      ProtobufCAllocator *allocator);
/* RpbYokozunaIndexPutReq methods */
void   rpb_yokozuna_index_put_req__init
                     (RpbYokozunaIndexPutReq         *message);
size_t rpb_yokozuna_index_put_req__get_packed_size
                     (const RpbYokozunaIndexPutReq   *message);
size_t rpb_yokozuna_index_put_req__pack
                     (const RpbYokozunaIndexPutReq   *message,
                      uint8_t             *out);
size_t rpb_yokozuna_index_put_req__pack_to_buffer
                     (const RpbYokozunaIndexPutReq   *message,
                      ProtobufCBuffer     *buffer);
RpbYokozunaIndexPutReq *
       rpb_yokozuna_index_put_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpb_yokozuna_index_put_req__free_unpacked
                     (RpbYokozunaIndexPutReq *message,
                      ProtobufCAllocator *allocator);
/* RpbYokozunaIndexDeleteReq methods */
void   rpb_yokozuna_index_delete_req__init
                     (RpbYokozunaIndexDeleteReq         *message);
size_t rpb_yokozuna_index_delete_req__get_packed_size
                     (const RpbYokozunaIndexDeleteReq   *message);
size_t rpb_yokozuna_index_delete_req__pack
                     (const RpbYokozunaIndexDeleteReq   *message,
                      uint8_t             *out);
size_t rpb_yokozuna_index_delete_req__pack_to_buffer
                     (const RpbYokozunaIndexDeleteReq   *message,
                      ProtobufCBuffer     *buffer);
RpbYokozunaIndexDeleteReq *
       rpb_yokozuna_index_delete_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpb_yokozuna_index_delete_req__free_unpacked
                     (RpbYokozunaIndexDeleteReq *message,
                      ProtobufCAllocator *allocator);
/* RpbYokozunaSchema methods */
void   rpb_yokozuna_schema__init
                     (RpbYokozunaSchema         *message);
size_t rpb_yokozuna_schema__get_packed_size
                     (const RpbYokozunaSchema   *message);
size_t rpb_yokozuna_schema__pack
                     (const RpbYokozunaSchema   *message,
                      uint8_t             *out);
size_t rpb_yokozuna_schema__pack_to_buffer
                     (const RpbYokozunaSchema   *message,
                      ProtobufCBuffer     *buffer);
RpbYokozunaSchema *
       rpb_yokozuna_schema__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpb_yokozuna_schema__free_unpacked
                     (RpbYokozunaSchema *message,
                      ProtobufCAllocator *allocator);
/* RpbYokozunaSchemaPutReq methods */
void   rpb_yokozuna_schema_put_req__init
                     (RpbYokozunaSchemaPutReq         *message);
size_t rpb_yokozuna_schema_put_req__get_packed_size
                     (const RpbYokozunaSchemaPutReq   *message);
size_t rpb_yokozuna_schema_put_req__pack
                     (const RpbYokozunaSchemaPutReq   *message,
                      uint8_t             *out);
size_t rpb_yokozuna_schema_put_req__pack_to_buffer
                     (const RpbYokozunaSchemaPutReq   *message,
                      ProtobufCBuffer     *buffer);
RpbYokozunaSchemaPutReq *
       rpb_yokozuna_schema_put_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpb_yokozuna_schema_put_req__free_unpacked
                     (RpbYokozunaSchemaPutReq *message,
                      ProtobufCAllocator *allocator);
/* RpbYokozunaSchemaGetReq methods */
void   rpb_yokozuna_schema_get_req__init
                     (RpbYokozunaSchemaGetReq         *message);
size_t rpb_yokozuna_schema_get_req__get_packed_size
                     (const RpbYokozunaSchemaGetReq   *message);
size_t rpb_yokozuna_schema_get_req__pack
                     (const RpbYokozunaSchemaGetReq   *message,
                      uint8_t             *out);
size_t rpb_yokozuna_schema_get_req__pack_to_buffer
                     (const RpbYokozunaSchemaGetReq   *message,
                      ProtobufCBuffer     *buffer);
RpbYokozunaSchemaGetReq *
       rpb_yokozuna_schema_get_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpb_yokozuna_schema_get_req__free_unpacked
                     (RpbYokozunaSchemaGetReq *message,
                      ProtobufCAllocator *allocator);
/* RpbYokozunaSchemaGetResp methods */
void   rpb_yokozuna_schema_get_resp__init
                     (RpbYokozunaSchemaGetResp         *message);
size_t rpb_yokozuna_schema_get_resp__get_packed_size
                     (const RpbYokozunaSchemaGetResp   *message);
size_t rpb_yokozuna_schema_get_resp__pack
                     (const RpbYokozunaSchemaGetResp   *message,
                      uint8_t             *out);
size_t rpb_yokozuna_schema_get_resp__pack_to_buffer
                     (const RpbYokozunaSchemaGetResp   *message,
                      ProtobufCBuffer     *buffer);
RpbYokozunaSchemaGetResp *
       rpb_yokozuna_schema_get_resp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rpb_yokozuna_schema_get_resp__free_unpacked
                     (RpbYokozunaSchemaGetResp *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*RpbYokozunaIndex_Closure)
                 (const RpbYokozunaIndex *message,
                  void *closure_data);
typedef void (*RpbYokozunaIndexGetReq_Closure)
                 (const RpbYokozunaIndexGetReq *message,
                  void *closure_data);
typedef void (*RpbYokozunaIndexGetResp_Closure)
                 (const RpbYokozunaIndexGetResp *message,
                  void *closure_data);
typedef void (*RpbYokozunaIndexPutReq_Closure)
                 (const RpbYokozunaIndexPutReq *message,
                  void *closure_data);
typedef void (*RpbYokozunaIndexDeleteReq_Closure)
                 (const RpbYokozunaIndexDeleteReq *message,
                  void *closure_data);
typedef void (*RpbYokozunaSchema_Closure)
                 (const RpbYokozunaSchema *message,
                  void *closure_data);
typedef void (*RpbYokozunaSchemaPutReq_Closure)
                 (const RpbYokozunaSchemaPutReq *message,
                  void *closure_data);
typedef void (*RpbYokozunaSchemaGetReq_Closure)
                 (const RpbYokozunaSchemaGetReq *message,
                  void *closure_data);
typedef void (*RpbYokozunaSchemaGetResp_Closure)
                 (const RpbYokozunaSchemaGetResp *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor rpb_yokozuna_index__descriptor;
extern const ProtobufCMessageDescriptor rpb_yokozuna_index_get_req__descriptor;
extern const ProtobufCMessageDescriptor rpb_yokozuna_index_get_resp__descriptor;
extern const ProtobufCMessageDescriptor rpb_yokozuna_index_put_req__descriptor;
extern const ProtobufCMessageDescriptor rpb_yokozuna_index_delete_req__descriptor;
extern const ProtobufCMessageDescriptor rpb_yokozuna_schema__descriptor;
extern const ProtobufCMessageDescriptor rpb_yokozuna_schema_put_req__descriptor;
extern const ProtobufCMessageDescriptor rpb_yokozuna_schema_get_req__descriptor;
extern const ProtobufCMessageDescriptor rpb_yokozuna_schema_get_resp__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_riak_5fyokozuna_2eproto__INCLUDED */
